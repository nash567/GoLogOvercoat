// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	model "github.com/goLogOverCoat/pkg/logger/model"
	mock "github.com/stretchr/testify/mock"
)

// LevelSetter is an autogenerated mock type for the LevelSetter type
type LevelSetter struct {
	mock.Mock
}

// GetLevel provides a mock function with given fields:
func (_m *LevelSetter) GetLevel() model.Level {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetLevel")
	}

	var r0 model.Level
	if rf, ok := ret.Get(0).(func() model.Level); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(model.Level)
	}

	return r0
}

// SetLevel provides a mock function with given fields: _a0
func (_m *LevelSetter) SetLevel(_a0 model.Level) {
	_m.Called(_a0)
}

// NewLevelSetter creates a new instance of LevelSetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLevelSetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *LevelSetter {
	mock := &LevelSetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
